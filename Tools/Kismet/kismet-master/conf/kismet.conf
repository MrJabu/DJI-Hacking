# Kismet config file
# Most of the "static" configs have been moved to here -- the command line
# config was getting way too crowded and cryptic.  We want functionality,
# not continually reading --help!

# Version of Kismet config
version=2017


# Include optional site-specific override configurations.  These options will
# are loaded AT THE END of config file loading, and OVERRIDE ANY OTHER OPTIONS
# OF THE SAME NAME.
#
# This file can be used to customize server installations or apply a common
# config across many Kismet installs.
opt_override=%E/kismet_site.conf



# Include the httpd config options
# %E is expanded to the system etc path configured at install
include=%E/kismet_httpd.conf

# Include the memory tuning options
include=%E/kismet_memory.conf

# Include the alert config options
include=%E/kismet_alerts.conf

# Include the storage options
include=%E/kismet_storage.conf

# Include logging options
include=%E/kismet_logging.conf



# Where capture binaries are allowed to live; for security reasons capture
# binaries are only executed from these directories
capture_binary_path=%B/kismet_capture_tools/



# Kismet can accept connections from remote capture datasources; by default this 
# is enabled on the loopback interface *only*.  It's recommended that the remote
# capture socket stay bound to the loopback local interface, and additional
# authentication - such as SSH tunnels - is used.  Check the Kismet README for
# more information about setting up remote capture securely!
remote_capture_listen=127.0.0.1
remote_capture_port=3501



# See the README for more information how to define sources; sources take the
# form of:
# source=interface:options
#
# For example to capture from a Wi-Fi interface in Linux you could specify:
# source=wlan0
#
# or to specify a custom name,
# source=wlan0:name=ath9k
#
# Sources may be defined in the config file or on the command line via the 
# '-c' option.  Sources may also be defined live via the WebUI.
#
# Kismet does not pre-define any sources, permanent sources can be added here
# or in kismet_site.conf



# Default behavior of capture sources; if there are no options passed on the source
# definition to control hopping, hop rate, or other attributes, these are applied

# Hop channels if possible
channel_hop=true

# How fast do we hop channels?  Time can be hops/second or hops/minute.
channel_hop_speed=5/sec

# If we have multiple sources with the same type, Kismet can try to split
# them up so that they hop from different starting positions; this maximizes the
# coverage
split_source_hopping=true

# Should Kismet scramble the channel list so that it hops in a semi-random pattern?
# This helps sources like Wi-Fi where many channels are adjacent and can overlap, 
# by randomizing 2.4ghz channels Kismet can take advantage of the overlap.  Typically
# leave this turned on.
randomized_hopping=true

# Should sources be re-opened when they encounter an error?
retry_on_source_error=true

# Should we override remote sources timestamps?  If you do not have NTP coordinating
# the time between your remote capture devices, you may see unusual behavior if the
# system clocks are drastically different.
override_remote_timestamp=true


# New GPS configuration
# gps=type:options
#
# gps=serial:device=/dev/ttyACM0,name=laptop
# gps=gpsd:host=localhost,port=2947
# gps=virtual:lat=123.45,lon=45.678,alt=1234



# Do we process the contents of data frames?  If this is enabled, data
# frames will be truncated to the headers only immediately after frame type
# detection.  This will disable IP detection, etc, however it is likely
# safer (and definitely more polite) if monitoring networks you do not own.
# hidedata=true



# Do we allow plugins to be used?  This will load plugins from the system
# and user plugin directiories when set to true (See the README for the default
# plugin locations).
allowplugins=true



# OUI file, expected format 00:11:22<tab>manufname
# IEEE OUI file used to look up manufacturer info.  We default to the
# wireshark one since most people have that.
ouifile=/etc/manuf
ouifile=/usr/share/wireshark/wireshark/manuf
ouifile=/usr/share/wireshark/manuf
ouifile=/Applications/Wireshark.app/Contents/Resources/share/wireshark/manuf



# Known WEP keys to decrypt, bssid,hexkey.  This is only for networks where
# the keys are already known, and it may impact throughput on slower hardware.
# Multiple wepkey lines may be used for multiple BSSIDs.
# wepkey=00:DE:AD:C0:DE:00,FEEDFACEDEADBEEF01020304050607080900

# Is transmission of the keys to the client allowed?  This may be a security
# risk for some.  If you disable this, you will not be able to query keys from
# a client.
allowkeytransmit=true

# Where state info, etc, is stored.  You shouldnt ever need to change this.
# This is a directory.
configdir=%h/.kismet/

